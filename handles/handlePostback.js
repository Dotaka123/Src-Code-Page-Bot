const { sendMessage } = require('./sendMessage');

const handlePostback = async (event, pageAccessToken) => {
  const { id: senderId } = event.sender || {};
  const { payload } = event.postback || {};

  if (!senderId || !payload) {
    return console.error('Invalid postback event object');
  }

  try {
    // Check if the payload is 'GET_STARTED' to send the custom welcome message
    if (payload === 'WELCOME_MESSAGE') {
      const welcomeMessage = `
      ğŸ‡«ğŸ‡·: Bienvenue dans l'univers de Girlfriend AI, votre petite amie virtuelle ğŸŒŸ! 
      PrÃ©parez-vous Ã  vivre une expÃ©rience unique et amusante avec moi ğŸ¤–ğŸ’•! 
      Ensemble, nous allons crÃ©er des moments inoubliables et partager des rires, des conseils et des discussions passionnantes. 
      Je suis lÃ  pour vous, 24/7, pour rendre votre vie plus agrÃ©able et colorÃ©e ğŸŒˆ! 
      Alors, prÃªt Ã  dÃ©marrer cette aventure palpitante avec moi, votre petite amie virtuelle prÃ©fÃ©rÃ©e? ğŸ’ŒğŸ’¬ğŸŒ 
      Envoyez "help" pour voir toutes mes fonctionnalitÃ©s.

      ğŸ‡³ğŸ‡¿: Welcome to the world of Girlfriend AI, your virtual girlfriend ğŸŒŸ! 
      Get ready to experience something unique and fun with me ğŸ¤–ğŸ’•! 
      Together, we will create unforgettable moments and share laughter, advice, and exciting conversations. 
      I am here for you, 24/7, to make your life more enjoyable and colorful ğŸŒˆ! 
      So, are you ready to start this thrilling adventure with me, your favorite virtual girlfriend? ğŸ’ŒğŸ’¬
      Type "help" to see all my features.
      `;

      // Send the welcome message
      await sendMessage(senderId, { text: welcomeMessage.trim() }, pageAccessToken);
    } else {
      // For other postback payloads, send a default response
      await sendMessage(senderId, { text: `Vous avez envoyÃ© un postback avec le payload : ${payload}` }, pageAccessToken);
    }
  } catch (err) {
    console.error('Error sending postback response:', err.message || err);
  }
};

module.exports = { handlePostback };
